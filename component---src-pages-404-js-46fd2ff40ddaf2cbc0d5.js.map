{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/SEO/SEO.js","webpack:///./src/components/SEO/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","_context_TextContext__WEBPACK_IMPORTED_MODULE_4__","NotFoundPage","_ref","data","location","siteTitle","site","siteMetadata","title","_useText","useText","t404Title","t404Content","a","createElement","propTypes","PropTypes","object","isRequired","SEO","description","lang","meta","keywords","_3477373310","metaDescription","react_default","Helmet_default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","string","arrayOf","SEO_SEO"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,IAQA,SAASa,EAATC,GAA0C,IAAlBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,SACtBC,EAAYF,EAAKG,KAAKC,aAAaC,MADDC,EAGLC,cAA3BC,EAHgCF,EAGhCE,UAAWC,EAHqBH,EAGrBG,YAEnB,OACElB,EAAAmB,EAAAC,cAAChB,EAAA,EAAD,CAAQM,SAAUA,EAAUI,MAAOH,GACjCX,EAAAmB,EAAAC,cAACf,EAAA,EAAD,CAAKS,MAAOG,IACZjB,EAAAmB,EAAAC,cAAA,UAAKH,GACLjB,EAAAmB,EAAAC,cAAA,SAAIF,IAKVX,EAAac,UAAY,CACvBZ,KAAMa,IAAUC,OAAOC,WACvBd,SAAUY,IAAUC,OAAOC,YAGdjB,YAER,IAAMT,EAAS,8GCjBtB,SAAS2B,EAATjB,GAA2D,IAA5CkB,EAA4ClB,EAA5CkB,YAAaC,EAA+BnB,EAA/BmB,KAAMC,EAAyBpB,EAAzBoB,KAAMC,EAAmBrB,EAAnBqB,SAAUf,EAASN,EAATM,MACxCF,EADiDkB,EAAArB,KACjDG,KAeFmB,EAAkBL,GAAed,EAAKC,aAAaa,YAEzD,OACEM,EAAAb,EAAAC,cAACa,EAAAd,EAAD,CACEe,eAAgB,CACdP,KAAMA,GAAQf,EAAKC,aAAac,MAElCb,MAAOA,EACPqB,cAAa,QAAUvB,EAAKC,aAAaC,MACzCc,KAAM,CACJ,CACEQ,KAAI,cACJC,QAASN,GAEX,CACEO,SAAQ,WACRD,QAASvB,GAEX,CACEwB,SAAQ,iBACRD,QAASN,GAEX,CACEO,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAASzB,EAAKC,aAAa0B,QAE7B,CACEH,KAAI,gBACJC,QAASvB,GAEX,CACEsB,KAAI,sBACJC,QAASN,IAGVS,OACCX,EAASY,OAAS,EACd,CACEL,KAAI,WACJC,QAASR,EAASa,KAAT,OAEX,IAELF,OAAOZ,KAKhBH,EAAIkB,aAAe,CACjBhB,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAIJ,UAAY,CACdK,YAAaJ,IAAUsB,OACvBjB,KAAML,IAAUsB,OAChBhB,KAAMN,IAAUuB,QAAQvB,IAAUC,QAClCM,SAAUP,IAAUuB,QAAQvB,IAAUsB,QACtC9B,MAAOQ,IAAUsB,OAAOpB,YAGXC,QCnGf/B,EAAAG,EAAAD,EAAA,sBAAAkD","file":"component---src-pages-404-js-46fd2ff40ddaf2cbc0d5.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport { useText } from '../context/TextContext';\n\nfunction NotFoundPage({ data, location }) {\n  const siteTitle = data.site.siteMetadata.title;\n\n  const { t404Title, t404Content } = useText();\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={t404Title} />\n      <h1>{t404Title}</h1>\n      <p>{t404Content}</p>\n    </Layout>\n  );\n}\n\nNotFoundPage.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n};\n\nexport default NotFoundPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            lang\n          }\n        }\n      }\n    `,\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang: lang || site.siteMetadata.lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n","export { default } from './SEO';\n"],"sourceRoot":""}