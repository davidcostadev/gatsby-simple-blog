{"version":3,"sources":["webpack:///./src/templates/tag-page.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Layout__WEBPACK_IMPORTED_MODULE_2__","_components_SEO__WEBPACK_IMPORTED_MODULE_3__","_components_PostAbbrev__WEBPACK_IMPORTED_MODULE_4__","_components_Bio__WEBPACK_IMPORTED_MODULE_5__","_context_TextContext__WEBPACK_IMPORTED_MODULE_6__","_utils_getBaseUrl__WEBPACK_IMPORTED_MODULE_7__","_utils_getBaseUrl__WEBPACK_IMPORTED_MODULE_7___default","TagPageTemplate","_ref","pageContext","data","tag","langKey","_data$allMarkdownRema","allMarkdownRemark","edges","totalCount","siteTitle","site","siteMetadata","title","defaultLang","lang","_useText","useText","tTags","tagHeader","tfTagHeader","base","getBaseUrl","a","createElement","location","breadcrumbs","text","url","description","map","_ref2","node","frontmatter","fields","slug","key","date","timeToRead","style","marginTop","propTypes","PropTypes","shape","string","isRequired","number","arrayOf"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAO,EAAAQ,GAcME,EAAkB,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,YAAaC,EAAWF,EAAXE,KAC9BC,EAAiBF,EAAjBE,IAAKC,EAAYH,EAAZG,QADoCC,EAEnBH,EAAKI,kBAA3BC,EAFyCF,EAEzCE,MAAOC,EAFkCH,EAElCG,WACTC,EAAYP,EAAKQ,KAAKC,aAAaC,MACnCC,EAAcX,EAAKQ,KAAKC,aAAaG,KAJMC,EAMlBC,YAAQZ,GAA/Ba,EANyCF,EAMzCE,MAEFC,GAAYC,EAR+BJ,EAMlCI,aAEeX,EAAYL,GAEpCiB,EAAOC,IAAWR,EAAaT,GAErC,OACEhB,EAAAkC,EAAAC,cAAC/B,EAAA,EAAD,CACE4B,KAAMA,EACNN,KAAMV,EACNoB,SAAS,WACTZ,MAAOH,EACPgB,YAAa,CAAC,CAAEC,KAAMT,EAAOU,IAAQP,EAAL,QAAmB,CAAEM,KAAMvB,KAE3Df,EAAAkC,EAAAC,cAAC9B,EAAA,EAAD,CAAKmB,MAAOM,EAAWU,YAAaV,IACpC9B,EAAAkC,EAAAC,cAAA,UAAKL,GACL9B,EAAAkC,EAAAC,cAAA,YACGhB,EAAMsB,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNnB,EAAQmB,EAAKC,YAAYpB,OAASmB,EAAKE,OAAOC,KACpD,OACE9C,EAAAkC,EAAAC,cAAC7B,EAAA,EAAD,CACEyC,IAAKJ,EAAKE,OAAOC,KACjBd,KAAMA,EACNN,KAAMV,EACN8B,KAAMH,EAAKE,OAAOC,KAClBE,KAAML,EAAKC,YAAYI,KACvBC,WAAYN,EAAKM,WACjBzB,MAAOA,OAKfxB,EAAAkC,EAAAC,cAAA,OAAKe,MAAO,CAAEC,UAAW,MACzBnD,EAAAkC,EAAAC,cAAA,aACEnC,EAAAkC,EAAAC,cAAC5B,EAAA,EAAD,SAMRI,EAAgByC,UAAY,CAC1BvC,YAAawC,IAAUC,MAAM,CAC3BvC,IAAKsC,IAAUE,OAAOC,aACrBA,WACH1C,KAAMuC,IAAUC,MAAM,CACpBpC,kBAAmBmC,IAAUC,MAAM,CACjClC,WAAYiC,IAAUI,OAAOD,WAC7BrC,MAAOkC,IAAUK,QACfL,IAAUC,MAAM,CACdX,KAAMU,IAAUC,MAAM,CACpBV,YAAaS,IAAUC,MAAM,CAC3B9B,MAAO6B,IAAUE,OAAOC,aAE1BX,OAAQQ,IAAUC,MAAM,CACtBR,KAAMO,IAAUE,OAAOC,WACvBxC,QAASqC,IAAUE,OAAOC,iBAG7BA,gBAGNA,YAGU7C,YAER,IAAMb,EAAS","file":"component---src-templates-tag-page-js-93e2e4a73b4b63c2b60d.js","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// Components\nimport { graphql } from 'gatsby';\n\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostAbbrev from '../components/PostAbbrev';\nimport Bio from '../components/Bio';\nimport { useText } from '../context/TextContext';\nimport getBaseUrl from '../utils/getBaseUrl';\n\nconst TagPageTemplate = ({ pageContext, data }) => {\n  const { tag, langKey } = pageContext;\n  const { edges, totalCount } = data.allMarkdownRemark;\n  const siteTitle = data.site.siteMetadata.title;\n  const defaultLang = data.site.siteMetadata.lang;\n\n  const { tTags, tfTagHeader } = useText(langKey);\n\n  const tagHeader = tfTagHeader(totalCount, tag);\n\n  const base = getBaseUrl(defaultLang, langKey);\n\n  return (\n    <Layout\n      base={base}\n      lang={langKey}\n      location=\"location\"\n      title={siteTitle}\n      breadcrumbs={[{ text: tTags, url: `${base}tags` }, { text: tag }]}\n    >\n      <SEO title={tagHeader} description={tagHeader} />\n      <h1>{tagHeader}</h1>\n      <main>\n        {edges.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug;\n          return (\n            <PostAbbrev\n              key={node.fields.slug}\n              base={base}\n              lang={langKey}\n              slug={node.fields.slug}\n              date={node.frontmatter.date}\n              timeToRead={node.timeToRead}\n              title={title}\n            />\n          );\n        })}\n      </main>\n      <div style={{ marginTop: 50 }} />\n      <aside>\n        <Bio />\n      </aside>\n    </Layout>\n  );\n};\n\nTagPageTemplate.propTypes = {\n  pageContext: PropTypes.shape({\n    tag: PropTypes.string.isRequired,\n  }).isRequired,\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      totalCount: PropTypes.number.isRequired,\n      edges: PropTypes.arrayOf(\n        PropTypes.shape({\n          node: PropTypes.shape({\n            frontmatter: PropTypes.shape({\n              title: PropTypes.string.isRequired,\n            }),\n            fields: PropTypes.shape({\n              slug: PropTypes.string.isRequired,\n              langKey: PropTypes.string.isRequired,\n            }),\n          }),\n        }).isRequired,\n      ),\n    }),\n  }).isRequired,\n};\n\nexport default TagPageTemplate;\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String, $langKey: String) {\n    site {\n      siteMetadata {\n        title\n        lang\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } }, fields: { langKey: { eq: $langKey } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          timeToRead\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            title\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}