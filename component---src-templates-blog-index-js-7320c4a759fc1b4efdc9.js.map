{"version":3,"sources":["webpack:///./src/templates/blog-index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_Bio__WEBPACK_IMPORTED_MODULE_2__","_components_Layout__WEBPACK_IMPORTED_MODULE_3__","_components_SEO__WEBPACK_IMPORTED_MODULE_4__","_components_PostAbbrev__WEBPACK_IMPORTED_MODULE_5__","_context_TextContext__WEBPACK_IMPORTED_MODULE_6__","_utils_getBaseUrl__WEBPACK_IMPORTED_MODULE_7__","_utils_getBaseUrl__WEBPACK_IMPORTED_MODULE_7___default","BlogIndex","_ref","data","location","pageContext","siteTitle","site","siteMetadata","title","defaultLang","lang","langKey","posts","allMarkdownRemark","edges","base","getBaseUrl","_useText","useText","tIndTitle","taIndKeywords","tfIndCountPosts","a","createElement","keywords","totalCount","map","_ref2","node","frontmatter","fields","slug","key","date","timeToRead","excerpt","description","tags","propTypes","PropTypes","object","isRequired","defaultProps"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAAO,EAAAF,GAAAG,EAAAR,EAAA,GAAAS,EAAAT,EAAAO,EAAAC,GAAAE,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,IAAAe,EAAAf,EAAA,KAAAgB,EAAAhB,EAAAO,EAAAQ,GAWA,SAASE,EAATC,GAAoD,IAA/BC,EAA+BD,EAA/BC,KAAMC,EAAyBF,EAAzBE,SAAUC,EAAeH,EAAfG,YAC7BC,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAcP,EAAKI,KAAKC,aAAaG,KACrCC,EAAUP,EAAYO,QACtBC,EAAQV,EAAKW,kBAAkBC,MAE/BC,EAAOC,IAAWP,EAAaE,GANaM,EAQIC,YAAQP,GAAtDQ,EAR0CF,EAQ1CE,UAAWC,EAR+BH,EAQ/BG,cAAeC,EARgBJ,EAQhBI,gBAElC,OACEhC,EAAAiC,EAAAC,cAAC7B,EAAA,EAAD,CAAQgB,KAAMC,EAASI,KAAMA,EAAMZ,SAAUA,EAAUK,MAAOH,GAC5DhB,EAAAiC,EAAAC,cAAC5B,EAAA,EAAD,CAAKe,KAAMC,EAASH,MAAOW,EAAWK,SAAUJ,IAChD/B,EAAAiC,EAAAC,cAAA,aACElC,EAAAiC,EAAAC,cAAC9B,EAAA,EAAD,OAEFJ,EAAAiC,EAAAC,cAAA,UAAKF,EAAgBnB,EAAKW,kBAAkBY,aAC3Cb,EAAMc,IAAI,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACNpB,EAAQoB,EAAKC,YAAYrB,OAASoB,EAAKE,OAAOC,KACpD,OACE1C,EAAAiC,EAAAC,cAAC3B,EAAA,EAAD,CACEc,KAAMC,EACNI,KAAMA,EACNiB,IAAKJ,EAAKE,OAAOC,KACjBA,KAAMH,EAAKE,OAAOC,KAClBE,KAAML,EAAKC,YAAYI,KACvBC,WAAYN,EAAKM,WACjB1B,MAAOA,EACP2B,QAASP,EAAKC,YAAYO,aAAeR,EAAKO,QAC9CE,KAAMT,EAAKC,YAAYQ,UAQnCrC,EAAUsC,UAAY,CACpBpC,KAAMqC,IAAUC,OAAOC,WACvBtC,SAAUoC,IAAUC,OAAOC,WAC3BrC,YAAamC,IAAUC,QAGzBxC,EAAU0C,aAAe,CACvBtC,YAAa,IAGAJ,YAER,IAAMb,EAAS","file":"component---src-templates-blog-index-js-7320c4a759fc1b4efdc9.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql } from 'gatsby';\n\nimport Bio from '../components/Bio';\nimport Layout from '../components/Layout';\nimport SEO from '../components/SEO';\nimport PostAbbrev from '../components/PostAbbrev';\nimport { useText } from '../context/TextContext';\nimport getBaseUrl from '../utils/getBaseUrl';\n\nfunction BlogIndex({ data, location, pageContext }) {\n  const siteTitle = data.site.siteMetadata.title;\n  const defaultLang = data.site.siteMetadata.lang;\n  const langKey = pageContext.langKey;\n  const posts = data.allMarkdownRemark.edges;\n\n  const base = getBaseUrl(defaultLang, langKey);\n\n  const { tIndTitle, taIndKeywords, tfIndCountPosts } = useText(langKey);\n\n  return (\n    <Layout lang={langKey} base={base} location={location} title={siteTitle}>\n      <SEO lang={langKey} title={tIndTitle} keywords={taIndKeywords} />\n      <aside>\n        <Bio />\n      </aside>\n      <h4>{tfIndCountPosts(data.allMarkdownRemark.totalCount)}</h4>\n      {posts.map(({ node }) => {\n        const title = node.frontmatter.title || node.fields.slug;\n        return (\n          <PostAbbrev\n            lang={langKey}\n            base={base}\n            key={node.fields.slug}\n            slug={node.fields.slug}\n            date={node.frontmatter.date}\n            timeToRead={node.timeToRead}\n            title={title}\n            excerpt={node.frontmatter.description || node.excerpt}\n            tags={node.frontmatter.tags}\n          />\n        );\n      })}\n    </Layout>\n  );\n}\n\nBlogIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n  location: PropTypes.object.isRequired,\n  pageContext: PropTypes.object,\n};\n\nBlogIndex.defaultProps = {\n  pageContext: {},\n};\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query($langKey: String!) {\n    site {\n      siteMetadata {\n        title\n        lang\n      }\n    }\n    allMarkdownRemark(\n      filter: { fields: { langKey: { eq: $langKey } } }\n      sort: { fields: [frontmatter___date], order: DESC }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt\n          timeToRead\n          fields {\n            slug\n            langKey\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}